Sequential generating
one-shot generating
	adjacency matrix based

conditional generation
	conditioning on graphs
	using GANs --> Already in the implementation, might be easier to build on that
	Edge transformations
	Graphs to built on top of
	

prepare source graphs and targets graphs
	singular population
	compare (old paper: target graph == source graph slightly shifted to left and sparse
		depending on where you want to take information from this is good (if you want only graphs with 11-13 nodes)
	compare temporal centrality metrics 

	use best one instead of trying multiple --> Build my project on results of the old one

	edge transformation (unconditional, sequential) vs. edge sequence (conditional, on graphs)
		adjacency matrix based might also be interesting

Read 5.1.3 5.1.4 and find corresponding code for generating source graphs
	BFS DFS over knowledge Graph

Change Code from 5.2 to be consistent to our project --> If run easily and run same code

Read 5.3, Temporal Autroregressive Learning (best one) to generate target graphs
	maybe try the different ones and let's see after what we use

Draw similar graph as on page 5 for us

After we can think about the other methods in the survey

Diagram: Inputs files (xml, yaml), export files (knowledge Graph, labels)
